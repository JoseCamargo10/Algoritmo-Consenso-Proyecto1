# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import Communication_pb2 as Communication__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in Communication_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class communicationHandlerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Client_Proxy = channel.unary_unary(
                '/communicationHandler/Client_Proxy',
                request_serializer=Communication__pb2.Request.SerializeToString,
                response_deserializer=Communication__pb2.Response.FromString,
                _registered_method=True)
        self.UpdateNodes = channel.unary_unary(
                '/communicationHandler/UpdateNodes',
                request_serializer=Communication__pb2.UpdateInfoRequest.SerializeToString,
                response_deserializer=Communication__pb2.UpdateInfoResponse.FromString,
                _registered_method=True)
        self.Disconnection = channel.unary_unary(
                '/communicationHandler/Disconnection',
                request_serializer=Communication__pb2.DisconnectionRequest.SerializeToString,
                response_deserializer=Communication__pb2.DisconnectionResponse.FromString,
                _registered_method=True)
        self.DisconnectionUpdate = channel.unary_unary(
                '/communicationHandler/DisconnectionUpdate',
                request_serializer=Communication__pb2.UpdateInfoResponse.SerializeToString,
                response_deserializer=Communication__pb2.GResponse.FromString,
                _registered_method=True)
        self.WriteProcess = channel.unary_unary(
                '/communicationHandler/WriteProcess',
                request_serializer=Communication__pb2.WriteRequest.SerializeToString,
                response_deserializer=Communication__pb2.WriteResponse.FromString,
                _registered_method=True)
        self.ReadProcess = channel.unary_unary(
                '/communicationHandler/ReadProcess',
                request_serializer=Communication__pb2.ReadRequest.SerializeToString,
                response_deserializer=Communication__pb2.ReadResponse.FromString,
                _registered_method=True)
        self.AppendEntries = channel.unary_unary(
                '/communicationHandler/AppendEntries',
                request_serializer=Communication__pb2.WriteRequest.SerializeToString,
                response_deserializer=Communication__pb2.GResponse.FromString,
                _registered_method=True)
        self.Heartbeat = channel.unary_unary(
                '/communicationHandler/Heartbeat',
                request_serializer=Communication__pb2.GRequest.SerializeToString,
                response_deserializer=Communication__pb2.GResponse.FromString,
                _registered_method=True)


class communicationHandlerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Client_Proxy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNodes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Disconnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectionUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AppendEntries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Heartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_communicationHandlerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Client_Proxy': grpc.unary_unary_rpc_method_handler(
                    servicer.Client_Proxy,
                    request_deserializer=Communication__pb2.Request.FromString,
                    response_serializer=Communication__pb2.Response.SerializeToString,
            ),
            'UpdateNodes': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNodes,
                    request_deserializer=Communication__pb2.UpdateInfoRequest.FromString,
                    response_serializer=Communication__pb2.UpdateInfoResponse.SerializeToString,
            ),
            'Disconnection': grpc.unary_unary_rpc_method_handler(
                    servicer.Disconnection,
                    request_deserializer=Communication__pb2.DisconnectionRequest.FromString,
                    response_serializer=Communication__pb2.DisconnectionResponse.SerializeToString,
            ),
            'DisconnectionUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectionUpdate,
                    request_deserializer=Communication__pb2.UpdateInfoResponse.FromString,
                    response_serializer=Communication__pb2.GResponse.SerializeToString,
            ),
            'WriteProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteProcess,
                    request_deserializer=Communication__pb2.WriteRequest.FromString,
                    response_serializer=Communication__pb2.WriteResponse.SerializeToString,
            ),
            'ReadProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadProcess,
                    request_deserializer=Communication__pb2.ReadRequest.FromString,
                    response_serializer=Communication__pb2.ReadResponse.SerializeToString,
            ),
            'AppendEntries': grpc.unary_unary_rpc_method_handler(
                    servicer.AppendEntries,
                    request_deserializer=Communication__pb2.WriteRequest.FromString,
                    response_serializer=Communication__pb2.GResponse.SerializeToString,
            ),
            'Heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.Heartbeat,
                    request_deserializer=Communication__pb2.GRequest.FromString,
                    response_serializer=Communication__pb2.GResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'communicationHandler', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('communicationHandler', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class communicationHandler(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Client_Proxy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/communicationHandler/Client_Proxy',
            Communication__pb2.Request.SerializeToString,
            Communication__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/communicationHandler/UpdateNodes',
            Communication__pb2.UpdateInfoRequest.SerializeToString,
            Communication__pb2.UpdateInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Disconnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/communicationHandler/Disconnection',
            Communication__pb2.DisconnectionRequest.SerializeToString,
            Communication__pb2.DisconnectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DisconnectionUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/communicationHandler/DisconnectionUpdate',
            Communication__pb2.UpdateInfoResponse.SerializeToString,
            Communication__pb2.GResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def WriteProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/communicationHandler/WriteProcess',
            Communication__pb2.WriteRequest.SerializeToString,
            Communication__pb2.WriteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/communicationHandler/ReadProcess',
            Communication__pb2.ReadRequest.SerializeToString,
            Communication__pb2.ReadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AppendEntries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/communicationHandler/AppendEntries',
            Communication__pb2.WriteRequest.SerializeToString,
            Communication__pb2.GResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/communicationHandler/Heartbeat',
            Communication__pb2.GRequest.SerializeToString,
            Communication__pb2.GResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
