syntax = "proto3";

service communicationHandler {
    rpc Client_Proxy(Request) returns (Response);   // Communication between Client and Proxy
    rpc UpdateNodes(UpdateInfoRequest) returns (UpdateInfoResponse);    // For Proxy know who nodes are online and it's roles
    rpc Disconnection(DisconnectionRequest) returns (DisconnectionResponse);    // To delete a node from Proxy's hashmap
    rpc DisconnectionUpdate(UpdateInfoResponse) returns (GResponse);    // To delete a node from other nodes' hashmaps
    rpc WriteProcess(WriteRequest) returns (WriteResponse); // Write proccess to send from Proxy to Leader
    rpc ReadProcess(ReadRequest) returns (ReadResponse);    // Read process to send from Proxy to one Follower
    rpc AppendEntries(WriteRequest) returns (GResponse);    // To write on Followers from Leader
    rpc UpdateWriteArray(ArrayRequest) returns (Array);     // A new node asks to Leader for the log of writing
    rpc Heartbeat(GRequest) returns (GResponse);            // Heartbeat to warn of Leader existence
    rpc NotifyNewLeader(LeaderNotificationRequest) returns (GResponse);  // Notify proxy about the new leader
    rpc GetLeaderStatus(GRequest) returns (LeaderStatusResponse);  // Check the status of the current leader
    rpc UpdateLeaderInfo(LeaderInfoRequest) returns (GResponse);
}

// ------------------------------------------------------------------------
// Generic request
message GRequest {
    int32 number = 1;
}

// Generic response
message GResponse {
    int32 number = 1;
}
// ------------------------------------------------------------------------

// ------------------------------------------------------------------------
// Client_Proxy request
message Request {
    string message = 1;
}

// Client_Proxy response
message Response {
    string message = 1;
}
// ------------------------------------------------------------------------

// ------------------------------------------------------------------------
// Update info request
message UpdateInfoRequest {
    string ip = 1;
    string role = 2;
}

// Update info response
message UpdateInfoResponse {
    map<string, string> nodes_info = 1;
}
// ------------------------------------------------------------------------

// ------------------------------------------------------------------------
// Write Request to leader
message WriteRequest {
    string data = 1;
}

// Write Response from leader
message WriteResponse {
    string message = 1;
}
// ------------------------------------------------------------------------

// ------------------------------------------------------------------------
// Read Request to follower
message ReadRequest {
    string key = 1;
}

// Read Response from follower
message ReadResponse {
    string data = 1;
}
// ------------------------------------------------------------------------

// ------------------------------------------------------------------------
// Message to notify disconnection
message DisconnectionRequest {
    string address = 1;
}

// Response to disconnection
message DisconnectionResponse {
    string message = 1;
}
// ------------------------------------------------------------------------

// ------------------------------------------------------------------------
// Array Request
message ArrayRequest {
    string message = 1;
}

// Array Response
message Array {
    repeated string array = 1;
}
// ------------------------------------------------------------------------

// ------------------------------------------------------------------------
// New message to carry the new leader's IP address
message LeaderNotificationRequest {
    string new_leader_ip = 1;
}
// ------------------------------------------------------------------------

// ------------------------------------------------------------------------
// New message to carry leader status
message LeaderStatusResponse {
    string current_leader_ip = 1;  // IP del líder actual
    bool is_leader_alive = 2;       // Estado del líder
}
// ------------------------------------------------------------------------

// ------------------------------------------------------------------------
message LeaderInfoRequest {
    string new_leader_ip = 1;
}